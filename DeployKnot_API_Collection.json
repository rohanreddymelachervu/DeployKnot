{
	"info": {
		"_postman_id": "deployknot-api-collection",
		"name": "DeployKnot API Collection",
		"description": "Complete API collection for DeployKnot deployment system with enhanced environment variable support via .env file upload",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Health Check",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/api/v1/health",
					"host": ["{{base_url}}"],
					"path": ["api", "v1", "health"]
				},
				"description": "Check if the DeployKnot API server is running and healthy."
			},
			"response": []
		},
		{
			"name": "Register User",
			"request": {
				"method": "POST",
				"header": [
					{"key": "Content-Type", "value": "application/json"}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"username\": \"testuser\",\n  \"email\": \"test@example.com\",\n  \"password\": \"testpass123\"\n}"
				},
				"url": {
					"raw": "{{base_url}}/api/v1/auth/register",
					"host": ["{{base_url}}"],
					"path": ["api", "v1", "auth", "register"]
				},
				"description": "Register a new user."
			},
			"response": [
				{
					"code": 201,
					"body": "{\n  \"message\": \"User registered successfully\",\n  \"user\": {\n    \"id\": \"uuid\",\n    \"username\": \"testuser\",\n    \"email\": \"test@example.com\",\n    \"is_active\": true,\n    \"created_at\": \"2025-07-11T22:00:00Z\"\n  }\n}"
				}
			]
		},
		{
			"name": "Login User",
			"request": {
				"method": "POST",
				"header": [
					{"key": "Content-Type", "value": "application/json"}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"username\": \"testuser\",\n  \"password\": \"testpass123\"\n}"
				},
				"url": {
					"raw": "{{base_url}}/api/v1/auth/login",
					"host": ["{{base_url}}"],
					"path": ["api", "v1", "auth", "login"]
				},
				"description": "Login as a user and receive a JWT token."
			},
			"response": [
				{
					"code": 200,
					"body": "{\n  \"token\": \"<JWT_TOKEN>\",\n  \"user\": {\n    \"id\": \"uuid\",\n    \"username\": \"testuser\",\n    \"email\": \"test@example.com\",\n    \"is_active\": true,\n    \"created_at\": \"2025-07-11T22:00:00Z\"\n  },\n  \"expires_at\": \"2025-07-18T22:00:00Z\"\n}"
				}
			]
		},
		{
			"name": "Get Profile",
			"request": {
				"method": "GET",
				"header": [
					{"key": "Authorization", "value": "Bearer {{jwt_token}}"}
				],
				"url": {
					"raw": "{{base_url}}/api/v1/auth/profile",
					"host": ["{{base_url}}"],
					"path": ["api", "v1", "auth", "profile"]
				},
				"description": "Get the authenticated user's profile. Requires JWT token."
			},
			"response": [
				{
					"code": 200,
					"body": "{\n  \"id\": \"uuid\",\n  \"username\": \"testuser\",\n  \"email\": \"test@example.com\",\n  \"is_active\": true,\n  \"created_at\": \"2025-07-11T22:00:00Z\"\n}"
				}
			]
		},
		{
			"name": "Create Deployment (with env file)",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer <YOUR_TOKEN>",
						"type": "text"
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{ "key": "target_ip", "value": "172.235.15.164", "type": "text" },
						{ "key": "ssh_username", "value": "root", "type": "text" },
						{ "key": "ssh_password", "value": "Webknot@1234", "type": "text" },
						{ "key": "github_repo_url", "value": "https://github.com/rohanreddymelachervu/DeployKnot-test", "type": "text" },
						{ "key": "github_pat", "value": "PAT", "type": "text" },
						{ "key": "github_branch", "value": "main", "type": "text" },
						{ "key": "port", "value": "3000", "type": "text" },
						{ "key": "container_name", "value": "my-app-test", "type": "text" },
						{ "key": "project_name", "value": "my-project-test", "type": "text" },
						{ "key": "deployment_name", "value": "Production Deployment", "type": "text" },
						{ "key": "env_file", "src": "<ABSOLUTE_PATH_TO_SAMPLE.ENV>", "type": "file" }
					]
				},
				"url": {
					"raw": "http://localhost:8080/api/v1/deployments",
					"protocol": "http",
					"host": ["localhost"],
					"port": "8080",
					"path": ["api", "v1", "deployments"]
				},
				"description": "Create a new deployment using multipart form data. Upload your .env file for environment variables. This is the recommended approach for environment variable handling."
			},
			"response": []
		},
		{
			"name": "Create Deployment (Legacy JSON)",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{jwt_token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"target_ip\": \"172.235.15.164\",\n  \"ssh_username\": \"root\",\n  \"ssh_password\": \"your-ssh-password\",\n  \"github_repo_url\": \"https://github.com/your-username/your-repo\",\n  \"github_pat\": \"***REMOVED***\",\n  \"github_branch\": \"main\",\n  \"environment_vars\": \"NODE_ENV=production\\nPORT=3000\\nDATABASE_URL=postgresql://user:pass@localhost:5432/mydb\",\n  \"port\": 3000,\n  \"container_name\": \"my-app\",\n  \"project_name\": \"my-project\",\n  \"deployment_name\": \"Production Deployment\"\n}"
				},
				"url": {
					"raw": "{{base_url}}/api/v1/deployments",
					"host": ["{{base_url}}"],
					"path": ["api", "v1", "deployments"]
				},
				"description": "Legacy JSON approach for creating deployments. Use the multipart form approach for better environment variable handling."
			},
			"response": []
		},
		{
			"name": "Get Deployment",
			"request": {
				"method": "GET",
				"header": [
					{"key": "Authorization", "value": "Bearer {{jwt_token}}"}
				],
				"url": {
					"raw": "{{base_url}}/api/v1/deployments/{{deployment_id}}",
					"host": ["{{base_url}}"],
					"path": ["api", "v1", "deployments", "{{deployment_id}}"]
				},
				"description": "Get deployment details by ID"
			},
			"response": []
		},
		{
			"name": "Get Deployment Logs (JSON)",
			"request": {
				"method": "GET",
				"header": [
					{"key": "Authorization", "value": "Bearer {{jwt_token}}"}
				],
				"url": {
					"raw": "{{base_url}}/api/v1/deployments/{{deployment_id}}/logs?limit=100",
					"host": ["{{base_url}}"],
					"path": ["api", "v1", "deployments", "{{deployment_id}}", "logs"],
					"query": [
						{
							"key": "limit",
							"value": "100"
						}
					]
				},
				"description": "Get deployment logs as JSON response"
			},
			"response": []
		},
		{
			"name": "Get Deployment Logs (SSE)",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "text/event-stream"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{jwt_token}}"
					}
				],
				"url": {
					"raw": "{{base_url}}/api/v1/deployments/{{deployment_id}}/logs",
					"host": ["{{base_url}}"],
					"path": ["api", "v1", "deployments", "{{deployment_id}}", "logs"]
				},
				"description": "Stream deployment logs using Server-Sent Events (SSE). This provides real-time log updates."
			},
			"response": []
		},
		{
			"name": "Get Deployment Steps",
			"request": {
				"method": "GET",
				"header": [
					{"key": "Authorization", "value": "Bearer {{jwt_token}}"}
				],
				"url": {
					"raw": "{{base_url}}/api/v1/deployments/{{deployment_id}}/steps",
					"host": ["{{base_url}}"],
					"path": ["api", "v1", "deployments", "{{deployment_id}}", "steps"]
				},
				"description": "Get deployment steps and their status"
			},
			"response": []
		},
		{
			"name": "List All Deployments",
			"request": {
				"method": "GET",
				"header": [
					{"key": "Authorization", "value": "Bearer {{jwt_token}}"}
				],
				"url": {
					"raw": "{{base_url}}/api/v1/deployments",
					"host": ["{{base_url}}"],
					"path": ["api", "v1", "deployments"]
				},
				"description": "Get all deployments"
			},
			"response": []
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "http://localhost:8080",
			"type": "string"
		},
		{
			"key": "deployment_id",
			"value": "your-deployment-id-here",
			"type": "string"
		},
		{
			"key": "jwt_token",
			"value": "",
			"type": "string",
			"description": "Paste your JWT token here after login."
		}
	]
} 